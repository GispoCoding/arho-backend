"""Add modified at trigger for all versioned tables

Revision ID: 4414882882f7
Revises: c78e25767496
Create Date: 2025-10-03 12:59:32.574156

"""

from collections.abc import Sequence

import geoalchemy2
import sqlalchemy as sa
from alembic import op
from alembic_utils.pg_trigger import PGTrigger
from sqlalchemy import text as sql_text

# revision identifiers, used by Alembic.
revision: str = "4414882882f7"
down_revision: str | None = "c78e25767496"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    codes_plan_theme_trg_plan_theme_modified_at = PGTrigger(
        schema="codes",
        signature="trg_plan_theme_modified_at",
        on_entity="codes.plan_theme",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.plan_theme\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_plan_theme_trg_plan_theme_modified_at)

    codes_type_of_document_trg_type_of_document_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_document_modified_at",
        on_entity="codes.type_of_document",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_document\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_type_of_document_trg_type_of_document_modified_at)

    codes_personal_data_content_trg_personal_data_content_modified_at = PGTrigger(
        schema="codes",
        signature="trg_personal_data_content_modified_at",
        on_entity="codes.personal_data_content",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.personal_data_content\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_personal_data_content_trg_personal_data_content_modified_at)

    codes_type_of_interaction_event_trg_type_of_interaction_event_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_interaction_event_modified_at",
        on_entity="codes.type_of_interaction_event",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_interaction_event\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(
        codes_type_of_interaction_event_trg_type_of_interaction_event_modified_at
    )

    codes_type_of_plan_regulation_group_trg_type_of_plan_regulation_group_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_plan_regulation_group_modified_at",
        on_entity="codes.type_of_plan_regulation_group",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_plan_regulation_group\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(
        codes_type_of_plan_regulation_group_trg_type_of_plan_regulation_group_modified_at
    )

    codes_type_of_plan_regulation_trg_type_of_plan_regulation_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_plan_regulation_modified_at",
        on_entity="codes.type_of_plan_regulation",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_plan_regulation\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(
        codes_type_of_plan_regulation_trg_type_of_plan_regulation_modified_at
    )

    codes_administrative_region_trg_administrative_region_modified_at = PGTrigger(
        schema="codes",
        signature="trg_administrative_region_modified_at",
        on_entity="codes.administrative_region",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.administrative_region\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_administrative_region_trg_administrative_region_modified_at)

    codes_type_of_underground_trg_type_of_underground_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_underground_modified_at",
        on_entity="codes.type_of_underground",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_underground\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_type_of_underground_trg_type_of_underground_modified_at)

    codes_type_of_decision_maker_trg_type_of_decision_maker_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_decision_maker_modified_at",
        on_entity="codes.type_of_decision_maker",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_decision_maker\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(
        codes_type_of_decision_maker_trg_type_of_decision_maker_modified_at
    )

    codes_legal_effects_of_master_plan_trg_legal_effects_of_master_plan_modified_at = PGTrigger(
        schema="codes",
        signature="trg_legal_effects_of_master_plan_modified_at",
        on_entity="codes.legal_effects_of_master_plan",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.legal_effects_of_master_plan\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(
        codes_legal_effects_of_master_plan_trg_legal_effects_of_master_plan_modified_at
    )

    codes_lifecycle_status_trg_lifecycle_status_modified_at = PGTrigger(
        schema="codes",
        signature="trg_lifecycle_status_modified_at",
        on_entity="codes.lifecycle_status",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.lifecycle_status\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_lifecycle_status_trg_lifecycle_status_modified_at)

    codes_municipality_trg_municipality_modified_at = PGTrigger(
        schema="codes",
        signature="trg_municipality_modified_at",
        on_entity="codes.municipality",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.municipality\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_municipality_trg_municipality_modified_at)

    codes_type_of_source_data_trg_type_of_source_data_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_source_data_modified_at",
        on_entity="codes.type_of_source_data",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_source_data\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_type_of_source_data_trg_type_of_source_data_modified_at)

    codes_language_trg_language_modified_at = PGTrigger(
        schema="codes",
        signature="trg_language_modified_at",
        on_entity="codes.language",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.language\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_language_trg_language_modified_at)

    codes_name_of_plan_case_decision_trg_name_of_plan_case_decision_modified_at = PGTrigger(
        schema="codes",
        signature="trg_name_of_plan_case_decision_modified_at",
        on_entity="codes.name_of_plan_case_decision",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.name_of_plan_case_decision\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(
        codes_name_of_plan_case_decision_trg_name_of_plan_case_decision_modified_at
    )

    codes_category_of_publicity_trg_category_of_publicity_modified_at = PGTrigger(
        schema="codes",
        signature="trg_category_of_publicity_modified_at",
        on_entity="codes.category_of_publicity",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.category_of_publicity\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_category_of_publicity_trg_category_of_publicity_modified_at)

    codes_type_of_verbal_plan_regulation_trg_type_of_verbal_plan_regulation_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_verbal_plan_regulation_modified_at",
        on_entity="codes.type_of_verbal_plan_regulation",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_verbal_plan_regulation\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(
        codes_type_of_verbal_plan_regulation_trg_type_of_verbal_plan_regulation_modified_at
    )

    codes_retention_time_trg_retention_time_modified_at = PGTrigger(
        schema="codes",
        signature="trg_retention_time_modified_at",
        on_entity="codes.retention_time",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.retention_time\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_retention_time_trg_retention_time_modified_at)

    codes_type_of_additional_information_trg_type_of_additional_information_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_additional_information_modified_at",
        on_entity="codes.type_of_additional_information",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_additional_information\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(
        codes_type_of_additional_information_trg_type_of_additional_information_modified_at
    )

    codes_plan_type_trg_plan_type_modified_at = PGTrigger(
        schema="codes",
        signature="trg_plan_type_modified_at",
        on_entity="codes.plan_type",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.plan_type\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(codes_plan_type_trg_plan_type_modified_at)

    codes_type_of_processing_event_trg_type_of_processing_event_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_processing_event_modified_at",
        on_entity="codes.type_of_processing_event",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_processing_event\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.create_entity(
        codes_type_of_processing_event_trg_type_of_processing_event_modified_at
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    codes_type_of_processing_event_trg_type_of_processing_event_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_processing_event_modified_at",
        on_entity="codes.type_of_processing_event",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_processing_event\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(
        codes_type_of_processing_event_trg_type_of_processing_event_modified_at
    )

    codes_plan_type_trg_plan_type_modified_at = PGTrigger(
        schema="codes",
        signature="trg_plan_type_modified_at",
        on_entity="codes.plan_type",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.plan_type\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_plan_type_trg_plan_type_modified_at)

    codes_type_of_additional_information_trg_type_of_additional_information_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_additional_information_modified_at",
        on_entity="codes.type_of_additional_information",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_additional_information\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(
        codes_type_of_additional_information_trg_type_of_additional_information_modified_at
    )

    codes_retention_time_trg_retention_time_modified_at = PGTrigger(
        schema="codes",
        signature="trg_retention_time_modified_at",
        on_entity="codes.retention_time",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.retention_time\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_retention_time_trg_retention_time_modified_at)

    codes_type_of_verbal_plan_regulation_trg_type_of_verbal_plan_regulation_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_verbal_plan_regulation_modified_at",
        on_entity="codes.type_of_verbal_plan_regulation",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_verbal_plan_regulation\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(
        codes_type_of_verbal_plan_regulation_trg_type_of_verbal_plan_regulation_modified_at
    )

    codes_category_of_publicity_trg_category_of_publicity_modified_at = PGTrigger(
        schema="codes",
        signature="trg_category_of_publicity_modified_at",
        on_entity="codes.category_of_publicity",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.category_of_publicity\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_category_of_publicity_trg_category_of_publicity_modified_at)

    codes_name_of_plan_case_decision_trg_name_of_plan_case_decision_modified_at = PGTrigger(
        schema="codes",
        signature="trg_name_of_plan_case_decision_modified_at",
        on_entity="codes.name_of_plan_case_decision",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.name_of_plan_case_decision\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(
        codes_name_of_plan_case_decision_trg_name_of_plan_case_decision_modified_at
    )

    codes_language_trg_language_modified_at = PGTrigger(
        schema="codes",
        signature="trg_language_modified_at",
        on_entity="codes.language",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.language\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_language_trg_language_modified_at)

    codes_type_of_source_data_trg_type_of_source_data_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_source_data_modified_at",
        on_entity="codes.type_of_source_data",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_source_data\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_type_of_source_data_trg_type_of_source_data_modified_at)

    codes_municipality_trg_municipality_modified_at = PGTrigger(
        schema="codes",
        signature="trg_municipality_modified_at",
        on_entity="codes.municipality",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.municipality\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_municipality_trg_municipality_modified_at)

    codes_lifecycle_status_trg_lifecycle_status_modified_at = PGTrigger(
        schema="codes",
        signature="trg_lifecycle_status_modified_at",
        on_entity="codes.lifecycle_status",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.lifecycle_status\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_lifecycle_status_trg_lifecycle_status_modified_at)

    codes_legal_effects_of_master_plan_trg_legal_effects_of_master_plan_modified_at = PGTrigger(
        schema="codes",
        signature="trg_legal_effects_of_master_plan_modified_at",
        on_entity="codes.legal_effects_of_master_plan",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.legal_effects_of_master_plan\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(
        codes_legal_effects_of_master_plan_trg_legal_effects_of_master_plan_modified_at
    )

    codes_type_of_decision_maker_trg_type_of_decision_maker_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_decision_maker_modified_at",
        on_entity="codes.type_of_decision_maker",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_decision_maker\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_type_of_decision_maker_trg_type_of_decision_maker_modified_at)

    codes_type_of_underground_trg_type_of_underground_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_underground_modified_at",
        on_entity="codes.type_of_underground",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_underground\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_type_of_underground_trg_type_of_underground_modified_at)

    codes_administrative_region_trg_administrative_region_modified_at = PGTrigger(
        schema="codes",
        signature="trg_administrative_region_modified_at",
        on_entity="codes.administrative_region",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.administrative_region\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_administrative_region_trg_administrative_region_modified_at)

    codes_type_of_plan_regulation_trg_type_of_plan_regulation_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_plan_regulation_modified_at",
        on_entity="codes.type_of_plan_regulation",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_plan_regulation\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(
        codes_type_of_plan_regulation_trg_type_of_plan_regulation_modified_at
    )

    codes_type_of_plan_regulation_group_trg_type_of_plan_regulation_group_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_plan_regulation_group_modified_at",
        on_entity="codes.type_of_plan_regulation_group",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_plan_regulation_group\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(
        codes_type_of_plan_regulation_group_trg_type_of_plan_regulation_group_modified_at
    )

    codes_type_of_interaction_event_trg_type_of_interaction_event_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_interaction_event_modified_at",
        on_entity="codes.type_of_interaction_event",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_interaction_event\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(
        codes_type_of_interaction_event_trg_type_of_interaction_event_modified_at
    )

    codes_personal_data_content_trg_personal_data_content_modified_at = PGTrigger(
        schema="codes",
        signature="trg_personal_data_content_modified_at",
        on_entity="codes.personal_data_content",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.personal_data_content\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_personal_data_content_trg_personal_data_content_modified_at)

    codes_type_of_document_trg_type_of_document_modified_at = PGTrigger(
        schema="codes",
        signature="trg_type_of_document_modified_at",
        on_entity="codes.type_of_document",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.type_of_document\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_type_of_document_trg_type_of_document_modified_at)

    codes_plan_theme_trg_plan_theme_modified_at = PGTrigger(
        schema="codes",
        signature="trg_plan_theme_modified_at",
        on_entity="codes.plan_theme",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON codes.plan_theme\n        FOR EACH ROW\n        EXECUTE FUNCTION hame.trgfunc_modified_at()",
    )
    op.drop_entity(codes_plan_theme_trg_plan_theme_modified_at)

    # ### end Alembic commands ###
