"""add_plan_proposition_table

Revision ID: 7de05df06dce
Revises: e22a66335242
Create Date: 2024-02-15 08:53:54.272759

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7de05df06dce"
down_revision: Union[str, None] = "e22a66335242"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "plan_proposition",
        sa.Column("plan_regulation_group_id", sa.UUID(), nullable=False),
        sa.Column(
            "text_value",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"fin": "", "swe": "", "eng": ""}',
            nullable=False,
        ),
        sa.Column("ordering", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("exported_at", sa.DateTime(), nullable=True),
        sa.Column("valid_from", sa.DateTime(), nullable=True),
        sa.Column("valid_to", sa.DateTime(), nullable=True),
        sa.Column("repealed_at", sa.DateTime(), nullable=True),
        sa.Column("lifecycle_status_id", sa.UUID(), nullable=False),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "modified_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["lifecycle_status_id"],
            ["codes.lifecycle_status.id"],
            name="plan_lifecycle_status_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["plan_regulation_group_id"],
            ["hame.plan_regulation_group.id"],
            name="plan_regulation_group_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="hame",
    )
    op.create_index(
        op.f("ix_hame_plan_proposition_ordering"),
        "plan_proposition",
        ["ordering"],
        unique=False,
        schema="hame",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_hame_plan_proposition_ordering"),
        table_name="plan_proposition",
        schema="hame",
    )
    op.drop_table("plan_proposition", schema="hame")
    # ### end Alembic commands ###
