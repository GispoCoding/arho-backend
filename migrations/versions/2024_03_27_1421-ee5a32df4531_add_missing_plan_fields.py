"""add missing plan fields

Revision ID: ee5a32df4531
Revises: 32c7605581c9
Create Date: 2024-03-27 14:21:52.507419

"""
from typing import Sequence, Union

# import geoalchemy2
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ee5a32df4531"
down_revision: Union[str, None] = "32c7605581c9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "document",
        sa.Column("permanent_document_identifier", sa.UUID(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"fin": "", "swe": "", "eng": ""}',
            nullable=False,
        ),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"fin": "", "swe": "", "eng": ""}',
            nullable=False,
        ),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"fin": "", "swe": "", "eng": ""}',
            nullable=False,
        ),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"fin": "", "swe": "", "eng": ""}',
            nullable=False,
        ),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"fin": "", "swe": "", "eng": ""}',
            nullable=False,
        ),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("plan_regulation_group_id", sa.UUID(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("plan_type_id", sa.UUID(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("permanent_plan_identifier", sa.String(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("producers_plan_identifier", sa.String(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"fin": "", "swe": "", "eng": ""}',
            nullable=False,
        ),
        schema="hame",
    )
    op.add_column(
        "plan", sa.Column("scale", sa.Integer(), nullable=True), schema="hame"
    )
    op.add_column(
        "plan",
        sa.Column("matter_management_identifier", sa.String(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("record_number", sa.String(), nullable=True),
        schema="hame",
    )
    op.create_foreign_key(
        "plan_regulation_group_id_fkey",
        "plan",
        "plan_regulation_group",
        ["plan_regulation_group_id"],
        ["id"],
        source_schema="hame",
        referent_schema="hame",
    )
    op.create_foreign_key(
        "plan_type_id_fkey",
        "plan",
        "plan_type",
        ["plan_type_id"],
        ["id"],
        source_schema="hame",
        referent_schema="codes",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("plan_type_id_fkey", "plan", schema="hame", type_="foreignkey")
    op.drop_constraint(
        "plan_regulation_group_id_fkey",
        "plan",
        schema="hame",
        type_="foreignkey",
    )
    op.drop_column("plan", "record_number", schema="hame")
    op.drop_column("plan", "matter_management_identifier", schema="hame")
    op.drop_column("plan", "scale", schema="hame")
    op.drop_column("plan", "description", schema="hame")
    op.drop_column("plan", "producers_plan_identifier", schema="hame")
    op.drop_column("plan", "permanent_plan_identifier", schema="hame")
    op.drop_column("plan", "plan_type_id", schema="hame")
    op.drop_column("plan", "plan_regulation_group_id", schema="hame")
    op.drop_column("other_point", "description", schema="hame")
    op.drop_column("other_area", "description", schema="hame")
    op.drop_column("line", "description", schema="hame")
    op.drop_column("land_use_point", "description", schema="hame")
    op.drop_column("land_use_area", "description", schema="hame")
    op.drop_column("document", "permanent_document_identifier", schema="hame")
    # ### end Alembic commands ###
