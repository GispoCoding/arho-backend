"""Remove default from created and modified at columns

Revision ID: b55cf0427df3
Revises: 4414882882f7
Create Date: 2025-10-03 13:04:15.109130

"""

from collections.abc import Sequence

import geoalchemy2
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "b55cf0427df3"
down_revision: str | None = "4414882882f7"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "administrative_region",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "administrative_region",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "category_of_publicity",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "category_of_publicity",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "language",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "language",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "legal_effects_of_master_plan",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "legal_effects_of_master_plan",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "lifecycle_status",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "lifecycle_status",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "municipality",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "municipality",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "name_of_plan_case_decision",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "name_of_plan_case_decision",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "personal_data_content",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "personal_data_content",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "plan_theme",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "plan_theme",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "plan_type",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "plan_type",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "retention_time",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "retention_time",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_additional_information",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_additional_information",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_decision_maker",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_decision_maker",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_document",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_document",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_interaction_event",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_interaction_event",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation_group",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation_group",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_processing_event",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_processing_event",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_source_data",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_source_data",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_underground",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_underground",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_verbal_plan_regulation",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_verbal_plan_regulation",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "additional_information",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "additional_information",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "document",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "document",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "event_date",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "event_date",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "land_use_area",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "land_use_area",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "lifecycle_date",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "lifecycle_date",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "line",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "line",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "organisation",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "organisation",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "other_area",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "other_area",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan_proposition",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan_proposition",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation_group",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation_group",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "point",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "point",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "source_data",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "source_data",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "source_data",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "source_data",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "point",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "point",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation_group",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation_group",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan_proposition",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan_proposition",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "other_area",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "other_area",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "organisation",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "organisation",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "line",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "line",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "lifecycle_date",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "lifecycle_date",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "land_use_area",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "land_use_area",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "event_date",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "event_date",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "document",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "document",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "additional_information",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "additional_information",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "type_of_verbal_plan_regulation",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_verbal_plan_regulation",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_underground",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_underground",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_source_data",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_source_data",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_processing_event",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_processing_event",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation_group",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation_group",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_interaction_event",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_interaction_event",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_document",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_document",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_decision_maker",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_decision_maker",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_additional_information",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_additional_information",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "retention_time",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "retention_time",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "plan_type",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "plan_type",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "plan_theme",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "plan_theme",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "personal_data_content",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "personal_data_content",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "name_of_plan_case_decision",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "name_of_plan_case_decision",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "municipality",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "municipality",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "lifecycle_status",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "lifecycle_status",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "legal_effects_of_master_plan",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "legal_effects_of_master_plan",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "language",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "language",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "category_of_publicity",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "category_of_publicity",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "administrative_region",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "administrative_region",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        nullable=False,
        schema="codes",
    )
    # ### end Alembic commands ###
