"""add common fields to all tables

Revision ID: 5310a8b157f0
Revises: c4335d15a590
Create Date: 2024-01-31 16:24:38.874577

"""
from typing import Sequence, Union

# import geoalchemy2
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5310a8b157f0"
down_revision: Union[str, None] = "c4335d15a590"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "lifecycle_status",
        sa.Column("short_name", sa.String(), nullable=False),
        schema="codes",
    )
    op.add_column(
        "lifecycle_status",
        sa.Column(
            "description",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"fin": "", "swe": "", "eng": ""}',
            nullable=False,
        ),
        schema="codes",
    )
    op.add_column(
        "lifecycle_status",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        schema="codes",
    )
    op.add_column(
        "lifecycle_status",
        sa.Column(
            "modified_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        schema="codes",
    )
    op.drop_constraint(
        "lifecycle_status_value_key", "lifecycle_status", schema="codes", type_="unique"
    )
    op.create_index(
        op.f("ix_codes_lifecycle_status_short_name"),
        "lifecycle_status",
        ["short_name"],
        unique=True,
        schema="codes",
    )
    op.create_index(
        op.f("ix_codes_lifecycle_status_value"),
        "lifecycle_status",
        ["value"],
        unique=True,
        schema="codes",
    )
    op.add_column(
        "plan", sa.Column("repealed_at", sa.DateTime(), nullable=True), schema="hame"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("plan", "repealed_at", schema="hame")
    op.drop_index(
        op.f("ix_codes_lifecycle_status_value"),
        table_name="lifecycle_status",
        schema="codes",
    )
    op.drop_index(
        op.f("ix_codes_lifecycle_status_short_name"),
        table_name="lifecycle_status",
        schema="codes",
    )
    op.create_unique_constraint(
        "lifecycle_status_value_key", "lifecycle_status", ["value"], schema="codes"
    )
    op.drop_column("lifecycle_status", "modified_at", schema="codes")
    op.drop_column("lifecycle_status", "created_at", schema="codes")
    op.drop_column("lifecycle_status", "description", schema="codes")
    op.drop_column("lifecycle_status", "short_name", schema="codes")
    # ### end Alembic commands ###
