name: Deploy

on:
  push:
    branches:
      - "main"
      - "vsl"

jobs:
  define-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Set environment
        id: set-env
        run: |
          if [ "${{ github.ref }}" = "refs/heads/vsl" ]; then
            ENVIRONMENT=vsl-test
          else
            ENVIRONMENT=arho-test
          fi
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

  build-and-deploy-lambda-functions:
    runs-on: ubuntu-latest
    needs: define-environment
    environment: ${{ needs.define-environment.outputs.environment }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Copy .env file
        run: cp .env.dev .env
      - name: Build zip files for lambda
        run: make build-lambda

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_LAMBDA_UPLOAD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LAMBDA_UPLOAD_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update dev lambda functions
        run: make prefix=${{ vars.INFRA_PREFIX }} update-lambda -C infra
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

      - name: Update dev database
        run: make prefix=${{ vars.INFRA_PREFIX }} migrate-db -C infra
