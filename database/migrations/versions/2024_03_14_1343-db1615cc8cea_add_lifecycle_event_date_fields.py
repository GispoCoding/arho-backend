"""add_lifecycle_event_date_fields

Revision ID: db1615cc8cea
Revises: 0a8a2fecda2a
Create Date: 2024-03-14 13:43:32.982375

"""
from typing import Sequence, Union

# import geoalchemy2
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "db1615cc8cea"
down_revision: Union[str, None] = "0a8a2fecda2a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "land_use_area",
        sa.Column("planning_initiative_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("pending_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("preparation_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("amended_plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("approved_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("under_rectification_reminder_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("under_appeal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column(
            "under_rectification_reminder_and_under_appeal_at",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("partially_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("partially_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column(
            "valid_before_legal_validity_of_plan_from",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column(
            "valid_before_legal_validity_of_plan_until",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("legally_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("legally_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("lapsed_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("rejected_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column("suspended_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.drop_column("land_use_area", "exported_at", schema="hame")
    op.drop_column("land_use_area", "valid_to", schema="hame")
    op.add_column(
        "land_use_point",
        sa.Column("planning_initiative_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("pending_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("preparation_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("amended_plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("approved_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("under_rectification_reminder_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("under_appeal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column(
            "under_rectification_reminder_and_under_appeal_at",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("partially_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("partially_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column(
            "valid_before_legal_validity_of_plan_from",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column(
            "valid_before_legal_validity_of_plan_until",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("legally_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("legally_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("lapsed_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("rejected_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column("suspended_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.drop_column("land_use_point", "exported_at", schema="hame")
    op.drop_column("land_use_point", "valid_to", schema="hame")
    op.add_column(
        "line",
        sa.Column("planning_initiative_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("pending_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("preparation_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("amended_plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("approved_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("under_rectification_reminder_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("under_appeal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column(
            "under_rectification_reminder_and_under_appeal_at",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("partially_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("partially_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column(
            "valid_before_legal_validity_of_plan_from",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column(
            "valid_before_legal_validity_of_plan_until",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("legally_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("legally_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("lapsed_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("rejected_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column("suspended_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.drop_column("line", "exported_at", schema="hame")
    op.drop_column("line", "valid_to", schema="hame")
    op.add_column(
        "other_area",
        sa.Column("planning_initiative_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("pending_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("preparation_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("amended_plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("approved_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("under_rectification_reminder_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("under_appeal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column(
            "under_rectification_reminder_and_under_appeal_at",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("partially_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("partially_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column(
            "valid_before_legal_validity_of_plan_from",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column(
            "valid_before_legal_validity_of_plan_until",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("legally_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("legally_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("lapsed_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("rejected_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column("suspended_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.drop_column("other_area", "exported_at", schema="hame")
    op.drop_column("other_area", "valid_to", schema="hame")
    op.add_column(
        "other_point",
        sa.Column("planning_initiative_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("pending_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("preparation_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("amended_plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("approved_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("under_rectification_reminder_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("under_appeal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column(
            "under_rectification_reminder_and_under_appeal_at",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("partially_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("partially_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column(
            "valid_before_legal_validity_of_plan_from",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column(
            "valid_before_legal_validity_of_plan_until",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("legally_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("legally_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("lapsed_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("rejected_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column("suspended_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.drop_column("other_point", "exported_at", schema="hame")
    op.drop_column("other_point", "valid_to", schema="hame")
    op.add_column(
        "plan",
        sa.Column("planning_initiative_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("pending_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("preparation_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("amended_plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("under_rectification_reminder_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("under_appeal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column(
            "under_rectification_reminder_and_under_appeal_at",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("partially_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("partially_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column(
            "valid_before_legal_validity_of_plan_from",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column(
            "valid_before_legal_validity_of_plan_until",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("legally_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("legally_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("lapsed_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("rejected_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column("suspended_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.drop_column("plan", "exported_at", schema="hame")
    op.drop_column("plan", "valid_to", schema="hame")
    op.add_column(
        "plan_proposition",
        sa.Column("planning_initiative_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("pending_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("preparation_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("amended_plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("approved_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("under_rectification_reminder_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("under_appeal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column(
            "under_rectification_reminder_and_under_appeal_at",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("partially_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("partially_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column(
            "valid_before_legal_validity_of_plan_from",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column(
            "valid_before_legal_validity_of_plan_until",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("legally_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("legally_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("lapsed_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("rejected_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column("suspended_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.drop_column("plan_proposition", "exported_at", schema="hame")
    op.drop_column("plan_proposition", "valid_to", schema="hame")
    op.add_column(
        "plan_regulation",
        sa.Column("planning_initiative_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("pending_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("preparation_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("amended_plan_proposal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("approved_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("under_rectification_reminder_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("under_appeal_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column(
            "under_rectification_reminder_and_under_appeal_at",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("partially_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("partially_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column(
            "valid_before_legal_validity_of_plan_from",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column(
            "valid_before_legal_validity_of_plan_until",
            sa.DateTime(),
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("legally_valid_from", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("legally_valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("valid_until", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("lapsed_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("rejected_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column("suspended_at", sa.DateTime(), nullable=True),
        schema="hame",
    )
    op.drop_column("plan_regulation", "exported_at", schema="hame")
    op.drop_column("plan_regulation", "valid_to", schema="hame")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "plan_regulation",
        sa.Column(
            "valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan_regulation",
        sa.Column(
            "exported_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.drop_column("plan_regulation", "suspended_at", schema="hame")
    op.drop_column("plan_regulation", "rejected_at", schema="hame")
    op.drop_column("plan_regulation", "lapsed_at", schema="hame")
    op.drop_column("plan_regulation", "valid_until", schema="hame")
    op.drop_column("plan_regulation", "legally_valid_until", schema="hame")
    op.drop_column("plan_regulation", "legally_valid_from", schema="hame")
    op.drop_column(
        "plan_regulation",
        "valid_before_legal_validity_of_plan_until",
        schema="hame",
    )
    op.drop_column(
        "plan_regulation",
        "valid_before_legal_validity_of_plan_from",
        schema="hame",
    )
    op.drop_column("plan_regulation", "partially_valid_until", schema="hame")
    op.drop_column("plan_regulation", "partially_valid_from", schema="hame")
    op.drop_column(
        "plan_regulation",
        "under_rectification_reminder_and_under_appeal_at",
        schema="hame",
    )
    op.drop_column("plan_regulation", "under_appeal_at", schema="hame")
    op.drop_column("plan_regulation", "under_rectification_reminder_at", schema="hame")
    op.drop_column("plan_regulation", "approved_at", schema="hame")
    op.drop_column("plan_regulation", "amended_plan_proposal_at", schema="hame")
    op.drop_column("plan_regulation", "plan_proposal_at", schema="hame")
    op.drop_column("plan_regulation", "preparation_at", schema="hame")
    op.drop_column("plan_regulation", "pending_at", schema="hame")
    op.drop_column("plan_regulation", "planning_initiative_at", schema="hame")
    op.add_column(
        "plan_proposition",
        sa.Column(
            "valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan_proposition",
        sa.Column(
            "exported_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.drop_column("plan_proposition", "suspended_at", schema="hame")
    op.drop_column("plan_proposition", "rejected_at", schema="hame")
    op.drop_column("plan_proposition", "lapsed_at", schema="hame")
    op.drop_column("plan_proposition", "valid_until", schema="hame")
    op.drop_column("plan_proposition", "legally_valid_until", schema="hame")
    op.drop_column("plan_proposition", "legally_valid_from", schema="hame")
    op.drop_column(
        "plan_proposition",
        "valid_before_legal_validity_of_plan_until",
        schema="hame",
    )
    op.drop_column(
        "plan_proposition",
        "valid_before_legal_validity_of_plan_from",
        schema="hame",
    )
    op.drop_column("plan_proposition", "partially_valid_until", schema="hame")
    op.drop_column("plan_proposition", "partially_valid_from", schema="hame")
    op.drop_column(
        "plan_proposition",
        "under_rectification_reminder_and_under_appeal_at",
        schema="hame",
    )
    op.drop_column("plan_proposition", "under_appeal_at", schema="hame")
    op.drop_column("plan_proposition", "under_rectification_reminder_at", schema="hame")
    op.drop_column("plan_proposition", "approved_at", schema="hame")
    op.drop_column("plan_proposition", "amended_plan_proposal_at", schema="hame")
    op.drop_column("plan_proposition", "plan_proposal_at", schema="hame")
    op.drop_column("plan_proposition", "preparation_at", schema="hame")
    op.drop_column("plan_proposition", "pending_at", schema="hame")
    op.drop_column("plan_proposition", "planning_initiative_at", schema="hame")
    op.add_column(
        "plan",
        sa.Column(
            "valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "plan",
        sa.Column(
            "exported_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.drop_column("plan", "suspended_at", schema="hame")
    op.drop_column("plan", "rejected_at", schema="hame")
    op.drop_column("plan", "lapsed_at", schema="hame")
    op.drop_column("plan", "valid_until", schema="hame")
    op.drop_column("plan", "legally_valid_until", schema="hame")
    op.drop_column("plan", "legally_valid_from", schema="hame")
    op.drop_column("plan", "valid_before_legal_validity_of_plan_until", schema="hame")
    op.drop_column("plan", "valid_before_legal_validity_of_plan_from", schema="hame")
    op.drop_column("plan", "partially_valid_until", schema="hame")
    op.drop_column("plan", "partially_valid_from", schema="hame")
    op.drop_column(
        "plan",
        "under_rectification_reminder_and_under_appeal_at",
        schema="hame",
    )
    op.drop_column("plan", "under_appeal_at", schema="hame")
    op.drop_column("plan", "under_rectification_reminder_at", schema="hame")
    op.drop_column("plan", "amended_plan_proposal_at", schema="hame")
    op.drop_column("plan", "plan_proposal_at", schema="hame")
    op.drop_column("plan", "preparation_at", schema="hame")
    op.drop_column("plan", "pending_at", schema="hame")
    op.drop_column("plan", "planning_initiative_at", schema="hame")
    op.add_column(
        "other_point",
        sa.Column(
            "valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "other_point",
        sa.Column(
            "exported_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.drop_column("other_point", "suspended_at", schema="hame")
    op.drop_column("other_point", "rejected_at", schema="hame")
    op.drop_column("other_point", "lapsed_at", schema="hame")
    op.drop_column("other_point", "valid_until", schema="hame")
    op.drop_column("other_point", "legally_valid_until", schema="hame")
    op.drop_column("other_point", "legally_valid_from", schema="hame")
    op.drop_column(
        "other_point",
        "valid_before_legal_validity_of_plan_until",
        schema="hame",
    )
    op.drop_column(
        "other_point",
        "valid_before_legal_validity_of_plan_from",
        schema="hame",
    )
    op.drop_column("other_point", "partially_valid_until", schema="hame")
    op.drop_column("other_point", "partially_valid_from", schema="hame")
    op.drop_column(
        "other_point",
        "under_rectification_reminder_and_under_appeal_at",
        schema="hame",
    )
    op.drop_column("other_point", "under_appeal_at", schema="hame")
    op.drop_column("other_point", "under_rectification_reminder_at", schema="hame")
    op.drop_column("other_point", "approved_at", schema="hame")
    op.drop_column("other_point", "amended_plan_proposal_at", schema="hame")
    op.drop_column("other_point", "plan_proposal_at", schema="hame")
    op.drop_column("other_point", "preparation_at", schema="hame")
    op.drop_column("other_point", "pending_at", schema="hame")
    op.drop_column("other_point", "planning_initiative_at", schema="hame")
    op.add_column(
        "other_area",
        sa.Column(
            "valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "other_area",
        sa.Column(
            "exported_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.drop_column("other_area", "suspended_at", schema="hame")
    op.drop_column("other_area", "rejected_at", schema="hame")
    op.drop_column("other_area", "lapsed_at", schema="hame")
    op.drop_column("other_area", "valid_until", schema="hame")
    op.drop_column("other_area", "legally_valid_until", schema="hame")
    op.drop_column("other_area", "legally_valid_from", schema="hame")
    op.drop_column(
        "other_area",
        "valid_before_legal_validity_of_plan_until",
        schema="hame",
    )
    op.drop_column(
        "other_area", "valid_before_legal_validity_of_plan_from", schema="hame"
    )
    op.drop_column("other_area", "partially_valid_until", schema="hame")
    op.drop_column("other_area", "partially_valid_from", schema="hame")
    op.drop_column(
        "other_area",
        "under_rectification_reminder_and_under_appeal_at",
        schema="hame",
    )
    op.drop_column("other_area", "under_appeal_at", schema="hame")
    op.drop_column("other_area", "under_rectification_reminder_at", schema="hame")
    op.drop_column("other_area", "approved_at", schema="hame")
    op.drop_column("other_area", "amended_plan_proposal_at", schema="hame")
    op.drop_column("other_area", "plan_proposal_at", schema="hame")
    op.drop_column("other_area", "preparation_at", schema="hame")
    op.drop_column("other_area", "pending_at", schema="hame")
    op.drop_column("other_area", "planning_initiative_at", schema="hame")
    op.add_column(
        "line",
        sa.Column(
            "valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "line",
        sa.Column(
            "exported_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.drop_column("line", "suspended_at", schema="hame")
    op.drop_column("line", "rejected_at", schema="hame")
    op.drop_column("line", "lapsed_at", schema="hame")
    op.drop_column("line", "valid_until", schema="hame")
    op.drop_column("line", "legally_valid_until", schema="hame")
    op.drop_column("line", "legally_valid_from", schema="hame")
    op.drop_column("line", "valid_before_legal_validity_of_plan_until", schema="hame")
    op.drop_column("line", "valid_before_legal_validity_of_plan_from", schema="hame")
    op.drop_column("line", "partially_valid_until", schema="hame")
    op.drop_column("line", "partially_valid_from", schema="hame")
    op.drop_column(
        "line",
        "under_rectification_reminder_and_under_appeal_at",
        schema="hame",
    )
    op.drop_column("line", "under_appeal_at", schema="hame")
    op.drop_column("line", "under_rectification_reminder_at", schema="hame")
    op.drop_column("line", "approved_at", schema="hame")
    op.drop_column("line", "amended_plan_proposal_at", schema="hame")
    op.drop_column("line", "plan_proposal_at", schema="hame")
    op.drop_column("line", "preparation_at", schema="hame")
    op.drop_column("line", "pending_at", schema="hame")
    op.drop_column("line", "planning_initiative_at", schema="hame")
    op.add_column(
        "land_use_point",
        sa.Column(
            "valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "land_use_point",
        sa.Column(
            "exported_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.drop_column("land_use_point", "suspended_at", schema="hame")
    op.drop_column("land_use_point", "rejected_at", schema="hame")
    op.drop_column("land_use_point", "lapsed_at", schema="hame")
    op.drop_column("land_use_point", "valid_until", schema="hame")
    op.drop_column("land_use_point", "legally_valid_until", schema="hame")
    op.drop_column("land_use_point", "legally_valid_from", schema="hame")
    op.drop_column(
        "land_use_point",
        "valid_before_legal_validity_of_plan_until",
        schema="hame",
    )
    op.drop_column(
        "land_use_point",
        "valid_before_legal_validity_of_plan_from",
        schema="hame",
    )
    op.drop_column("land_use_point", "partially_valid_until", schema="hame")
    op.drop_column("land_use_point", "partially_valid_from", schema="hame")
    op.drop_column(
        "land_use_point",
        "under_rectification_reminder_and_under_appeal_at",
        schema="hame",
    )
    op.drop_column("land_use_point", "under_appeal_at", schema="hame")
    op.drop_column("land_use_point", "under_rectification_reminder_at", schema="hame")
    op.drop_column("land_use_point", "approved_at", schema="hame")
    op.drop_column("land_use_point", "amended_plan_proposal_at", schema="hame")
    op.drop_column("land_use_point", "plan_proposal_at", schema="hame")
    op.drop_column("land_use_point", "preparation_at", schema="hame")
    op.drop_column("land_use_point", "pending_at", schema="hame")
    op.drop_column("land_use_point", "planning_initiative_at", schema="hame")
    op.add_column(
        "land_use_area",
        sa.Column(
            "valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.add_column(
        "land_use_area",
        sa.Column(
            "exported_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        schema="hame",
    )
    op.drop_column("land_use_area", "suspended_at", schema="hame")
    op.drop_column("land_use_area", "rejected_at", schema="hame")
    op.drop_column("land_use_area", "lapsed_at", schema="hame")
    op.drop_column("land_use_area", "valid_until", schema="hame")
    op.drop_column("land_use_area", "legally_valid_until", schema="hame")
    op.drop_column("land_use_area", "legally_valid_from", schema="hame")
    op.drop_column(
        "land_use_area",
        "valid_before_legal_validity_of_plan_until",
        schema="hame",
    )
    op.drop_column(
        "land_use_area",
        "valid_before_legal_validity_of_plan_from",
        schema="hame",
    )
    op.drop_column("land_use_area", "partially_valid_until", schema="hame")
    op.drop_column("land_use_area", "partially_valid_from", schema="hame")
    op.drop_column(
        "land_use_area",
        "under_rectification_reminder_and_under_appeal_at",
        schema="hame",
    )
    op.drop_column("land_use_area", "under_appeal_at", schema="hame")
    op.drop_column("land_use_area", "under_rectification_reminder_at", schema="hame")
    op.drop_column("land_use_area", "approved_at", schema="hame")
    op.drop_column("land_use_area", "amended_plan_proposal_at", schema="hame")
    op.drop_column("land_use_area", "plan_proposal_at", schema="hame")
    op.drop_column("land_use_area", "preparation_at", schema="hame")
    op.drop_column("land_use_area", "pending_at", schema="hame")
    op.drop_column("land_use_area", "planning_initiative_at", schema="hame")
    # ### end Alembic commands ###
