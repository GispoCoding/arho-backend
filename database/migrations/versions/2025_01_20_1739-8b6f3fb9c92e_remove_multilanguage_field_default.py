"""remove multilanguage field default

Revision ID: 8b6f3fb9c92e
Revises: 4d06e8bf8c01
Create Date: 2025-01-20 17:39:15.870755

"""
from typing import Sequence, Union

import geoalchemy2
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8b6f3fb9c92e"
down_revision: Union[str, None] = "4d06e8bf8c01"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "administrative_region",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "administrative_region",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "category_of_publicity",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "category_of_publicity",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "language",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "language",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "lifecycle_status",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "lifecycle_status",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "municipality",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "municipality",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "name_of_plan_case_decision",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "name_of_plan_case_decision",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "personal_data_content",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "personal_data_content",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "plan_theme",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "plan_theme",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "plan_type",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "plan_type",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "retention_time",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "retention_time",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_additional_information",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_additional_information",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_decision_maker",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_decision_maker",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_document",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_document",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_interaction_event",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_interaction_event",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation_group",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation_group",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_processing_event",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_processing_event",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_source_data",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_source_data",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_underground",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_underground",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_verbal_plan_regulation",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "type_of_verbal_plan_regulation",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="codes",
    )
    op.alter_column(
        "document",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "land_use_area",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "land_use_area",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "land_use_point",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "land_use_point",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "line",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "line",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "organisation",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "other_area",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "other_area",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "other_point",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "other_point",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan_proposition",
        "text_value",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation",
        "text_value",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation_group",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    op.alter_column(
        "source_data",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=None,
        nullable=True,
        schema="hame",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "source_data",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation_group",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan_regulation",
        "text_value",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan_proposition",
        "text_value",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "plan",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "other_point",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "other_point",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "other_area",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "other_area",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "organisation",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "line",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "line",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "land_use_point",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "land_use_point",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "land_use_area",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "land_use_area",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "document",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="hame",
    )
    op.alter_column(
        "type_of_verbal_plan_regulation",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_verbal_plan_regulation",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_underground",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_underground",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_source_data",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_source_data",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_processing_event",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_processing_event",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation_group",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation_group",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_plan_regulation",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_interaction_event",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_interaction_event",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_document",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_document",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_decision_maker",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_decision_maker",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_additional_information",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "type_of_additional_information",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "retention_time",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "retention_time",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "plan_type",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "plan_type",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "plan_theme",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "plan_theme",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "personal_data_content",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "personal_data_content",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "name_of_plan_case_decision",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "name_of_plan_case_decision",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "municipality",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "municipality",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "lifecycle_status",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "lifecycle_status",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "language",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "language",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "category_of_publicity",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "category_of_publicity",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "administrative_region",
        "description",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    op.alter_column(
        "administrative_region",
        "name",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        server_default=sa.text('\'{"eng": "", "fin": "", "swe": ""}\'::jsonb'),
        nullable=False,
        schema="codes",
    )
    # ### end Alembic commands ###
